---
- name: Install packages for kubernetes
  hosts: all
  become: true
  become_user: root
  user: '{{USER}}'
  vars_files:
  - env.yml
  tasks:
  - name: installing apt packages required for kubernetes
    apt:
      name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    tags: apt

  - name: Check if folder exists
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

  - name: Download the public signing key for kubernetes package repository
    get_url: 
      url: https://pkgs.k8s.io/core:/stable:/{{KUBERNETES_VERSION}}/deb/Release.key
      dest: /etc/apt/keyrings/Release_armor.key
      mode: '0644'

  - name: dearmor kubernetes public key and add to keyrings folder
    shell: |
      sudo gpg --dearmor < /etc/apt/keyrings/Release_armor.key | sudo tee /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      sudo rm -f /etc/apt/keyrings/Release_armor.key
    args:
      creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      removes: /etc/apt/keyrings/Release_armor.key

  - name: Set permissions for kubernetes-apt-keyring.gpg
    file:
      path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      mode: '0644'

  - name: add kubernetes apt repository
    shell:
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{KUBERNETES_VERSION}}/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - name: run apt update
    apt:
      name: [kubectl]
      update_cache: true
      update_cache_retries: 2
      update_cache_retry_max_delay: 5

    
  - name: Installing bash completion on master
    apt:
      name: bash-completion
    when: inventory_hostname in groups['master']

  - name: update shell to consider bash-completion for kubectl
    blockinfile:
      path: ~/.bashrc
      content: |
        source <(kubectl completion bash)
        alias k=kubectl
        complete -o default -F __start_kubectl k
      marker: "# {mark} ANSIBLE MANAGED BLOCK"
      state: present
    when: inventory_hostname in groups['master']
    tags: bash-complete

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{item}}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none
  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: enable IPV4 packet forwarding
    lineinfile:
      path: /etc/sysctl.d/k8s.conf
      line: net.ipv4.ip_forward = 1
      create: true

    tags:
      - ip-forwarding

  - name: Reload/Apply sysctl params
    command: sysctl --system

